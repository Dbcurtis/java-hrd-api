/*
 * RadioSelectorGUI.java
 *
 * Created on Apr 2, 2010, 11:09:07 PM
 */
package net.dbcrd.radiopackage;

import java.util.LinkedList;
import java.util.List;
import java.util.NavigableSet;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import javax.swing.AbstractListModel;
import javax.swing.SwingWorker;
import net.dbcrd.radiopackage.omnirigserial.OmniRigDefFileList;


/**
 *
 * @author dbcurtis
 */
public final class RadioSelectorGUI extends javax.swing.JFrame {

    static Preferences selectorPrefs=Preferences.userRoot().node(RadioSelectorGUI.class.getName());
    static final long serialVersionUID=32984982398234742L;
    private static final String SEL_IDX ="selectorIdx";
    private static final String SEL_RDO ="selectedRdo";
    private final static long ONE_SEC=1000L;
    private final static long POINT2_SEC=200L;
    private static volatile boolean done=false;
    private static boolean cancel=false;
    private static final Logger THE_LOGGER=
            Logger.getLogger(RadioSelectorGUI.class.getName());

    final Preferences radioPrefs;
    final ExecutorService myWorkerPool;

    RadioControl selectedRadio =null;

    /**
     * Creates new form RadioSelectorGUI
     * @param radioPrefs
     * @param wp
     */
    public RadioSelectorGUI(final Preferences radioPrefs,final ExecutorService wp) {
        super();
        myWorkerPool=wp;
        initComponents();
        jBEditRadioCat.setEnabled(false);
        final RadioModel model=new RadioModel();
        jLRadioList.setModel(model);
        this.radioPrefs=radioPrefs;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jLRadioList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jBOK = new javax.swing.JButton();
        jBCancel = new javax.swing.JButton();
        jBEditRadioCat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Select Radio");

        jLRadioList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jLRadioList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLRadioListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jLRadioList);

        jLabel1.setText("Select Radio");

        jBOK.setText("OK");
        jBOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOKActionPerformed(evt);
            }
        });

        jBCancel.setText("Cancel");
        jBCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelActionPerformed(evt);
            }
        });

        jBEditRadioCat.setText("Edit Radio");
        jBEditRadioCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditRadioCatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBOK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBCancel))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBEditRadioCat)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBOK)
                    .addComponent(jBCancel)
                    .addComponent(jBEditRadioCat))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOKActionPerformed

        done=true;

    }//GEN-LAST:event_jBOKActionPerformed

    private void jBCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelActionPerformed

        cancel=true;
        done=true;

    }//GEN-LAST:event_jBCancelActionPerformed

    private void jBEditRadioCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditRadioCatActionPerformed

        if (null==selectedRadio){
            return;
        }else{
            this.jBOK.setEnabled(false);
            this.jBCancel.setEnabled(false);
            myWorkerPool.execute(new EditRadioTask(selectedRadio));
        }

    }//GEN-LAST:event_jBEditRadioCatActionPerformed

    private void jLRadioListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLRadioListMouseClicked

        jBEditRadioCat.setEnabled(true);
        selectedRadio = RadioSelect.getRadio((String)this.jLRadioList.getSelectedValue());

    }//GEN-LAST:event_jLRadioListMouseClicked

    /**
     * @param args the command line arguments
     * @param prefsin
     * @param wp 
     * @return
     */
    public static RadioControl main(final String args[], final Preferences prefsin, final ExecutorService wp) {
        final RadioSelectorGUI dialog=new RadioSelectorGUI(prefsin, wp);
        RadioControl result=null;

        done=false;
        cancel=false;

        dialog.jLRadioList.setSelectedIndex(Integer.valueOf(selectorPrefs.get(SEL_IDX ,"0")));
        dialog.jBEditRadioCat.setEnabled(true);
        dialog.selectedRadio = RadioSelect.getRadio(selectorPrefs.get(SEL_RDO, RadioSelect.RESET_VAL));
        dialog.pack();

        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(final java.awt.event.WindowEvent wce) {
                        cancel=done=true;
                    }
                });

                dialog.setLocationRelativeTo(null);
                dialog.setVisible(true);
                dialog.setVisible(true);
            }
        });

        while(!dialog.isVisible()){
            try{
                Thread.sleep(POINT2_SEC);
            } catch(InterruptedException ex){
                break;
            }
        }

        while(!done){
            try{
                Thread.sleep(ONE_SEC);
            } catch(InterruptedException ex){
                THE_LOGGER.log(Level.SEVERE, null, ex);
            }
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dialog.setVisible(false);
            }
        });

        if(!cancel){
            final String radioid=(String) dialog.jLRadioList.getSelectedValue();
            selectorPrefs.put(SEL_IDX , Integer.toString(dialog.jLRadioList.getSelectedIndex()));
            selectorPrefs.put(SEL_RDO, (String) dialog.jLRadioList.getSelectedValue());
            prefsin.put(RadioSelect.SELECTED_RADIO, radioid);
            result=RadioSelect.getRadio(radioid);
        }

        done=false;
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dialog.dispose();
                done=true;
            }
        });

        while(!done){
            try{
                Thread.sleep(POINT2_SEC);
            } catch(InterruptedException ex){
                THE_LOGGER.log(Level.SEVERE, null, ex);
            }
        }
        return result;
    }

   /**
    *
    */
    private class EditRadioTask extends SwingWorker<Boolean, Void> {
        final private RadioControl sRadio;
        /**
         *
         * @param selradio
         */
        EditRadioTask(final RadioControl selradio) {
            super();
            sRadio=selradio; 
        }

        /**
         *
         * @return
         */
        @Override
        protected Boolean doInBackground() {
            sRadio.editSelf();
            return true;
        }

        /**
         *
         */
        @Override
        protected void done() {           
            try{
                boolean jjj=get();
            } catch(InterruptedException ex){
                THE_LOGGER.log(Level.SEVERE, null, ex);
            } catch(ExecutionException ex){
                THE_LOGGER.log(Level.SEVERE, null, ex.getCause());
            }
            jBOK.setEnabled(true);
            jBCancel.setEnabled(true);
            jLRadioList.setEnabled(true);
        }
    }

   /**
    * 
    */
    private static class RadioModel extends AbstractListModel {
        static final long serialVersionUID=394898274385196L;
        final List<String> list=new LinkedList<String>();

        RadioModel() {
            super();
            for(RadioIdentification rid:RadioIdentification.values()){
                if(rid.isEnabled()){
                    switch (rid){
                        case HRD:
                            list.add(rid.name());
                            break;
                        case OMNI_RIGP:{                           
                            OmniRigDefFileList ord=OmniRigDefFileList.getInstance();
                            NavigableSet<String> names = ord.getFileNames();
                            for (String name:names){
                                list.add(new StringBuilder("OR-").append(name.substring(0, name.indexOf("."))).toString());
                            }
                            break;
                        }
                        default:
                             list.add("**Unknown Radio");
                             break;
                    }                  
                }
            }
        }

      /**
       *
       * @return an int size of the model
       */
        public int getSize() {
            return list.size();
        }

        /**
         *
         * @param index an int to specify the element
         * @return an Object selected by the indexed element
         */
        public Object getElementAt(final int index) {
            return list.get(index);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCancel;
    private javax.swing.JButton jBEditRadioCat;
    private javax.swing.JButton jBOK;
    private javax.swing.JList jLRadioList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
